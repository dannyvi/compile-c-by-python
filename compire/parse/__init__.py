"""Parse module contains the component usually used in a syntax analyzer.

A parser comprises symbols, grammar, rules, syntax_table, and sdt.
It read rules from a .grammar file defines the grammar rules, parse and generate
symbols, then grammar and translate functions(rules). Then after, a syntax_table
was generated by algorithm. The former elements were to construct an sdt that
could parse a token stream generated from source code by a tokenizer.

Module atoms contains the basic elements that constructs a grammar, which
includes group of symbols, where ``NTerm`` by means of **None Terminal**
element, ``Term`` of **Terminal** , and ``Value`` of the literal value of
**characters** . ``Production`` is formed with a head (left part) which is
an ``NTerm`` , a body (right part) which is a tuple of symbols, and a
rule, which do the translate actions. Constructs would be follow::

    n = NTerm('stmt', nullable=True)
    body = (Value('if'), Value('('), NTerm('cond'), Value(')'),
            NTerm('stmt'), Value('else'), NTerm('stmt'))
    rule = lambda x: None
    production = Production(n, body, rule)

The loader do the preceding part of sdt construction, which comprises a
**Symbol List** and a **Grammar List**. It also generates an **Env**. By most
conditions, The Env contain functions is already integrated in the Grammar,
so not quite often used.

For example::

    from compire.parse.loader import load_grammar
    gram_file = "a.grammar"      # the file with correct path needed
    grammar, symbols, env = load_grammar(gram_file)


Then, table would generate a **Parsing Table** by obtaining Grammar List and
Symbols from the loader::

    from compire.parse.table import gen_syntax_table
    table = gen_syntax_table(grammar, symbols):

At last, the **SDT** was constructed with the symbols, grammar list, and the
parsing table::

    from compire.parse.sdt import SDT
    sdt = SDT()
    sdt.load_grammar(gram_file)

Or simply from grammar file::

    from compire.parse.sdt import SDT
    sdt = SDT.from_gram(gram_file)


"""

from .sdt import SDT